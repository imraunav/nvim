vim.g.mapleader = " " 			-- sets leader key
vim.g.netrw_browse_split = 4		-- open in prior window
vim.g.netrw_liststyle=3			-- tree style (best)
vim.g.netrw_altv = 1

-- quality of life
vim.opt.title = true			-- show title
vim.cmd('set path+=**')			-- search current dir recurssively
vim.opt.syntax = "ON"
vim.opt.compatible = false
vim.opt.number = true
vim.opt.relativenumber = true
vim.opt.mouse = 'v'			-- mouse only work in visual mode. options:a,n,v,i
vim.opt.cursorline = true
vim.opt.ignorecase = true
vim.opt.smartcase = true
vim.opt.hlsearch = false
vim.opt.incsearch = true
vim.opt.wrap = false

-- tab config
vim.opt.tabstop = 4
vim.opt.shiftwidth = 4
vim.opt.shiftround = true
vim.opt.expandtab = true
vim.opt.softtabstop = 4
vim.cmd('filetype plugin indent on')
vim.opt.autoindent = true
-- vim.opt.smartindent = true

-- visual
vim.opt.fileencoding = "utf-8"
vim.opt.pumheight = 10          -- [p]op-[u]p [m]enu height
vim.opt.showtabline = 2         -- always show the tabline
vim.opt.laststatus = 2
vim.opt.signcolumn = 'auto'
vim.opt.showcmd = true
vim.opt.showmode = true
vim.opt.scrolloff = 8

-- misc
vim.opt.clipboard = unnamedplus
vim.opt.completeopt = { "menuone", "noselect", "noinsert" }
vim.opt.splitbelow = true
vim.opt.splitright = true
vim.opt.termguicolors = true

vim.cmd('colorscheme slate')                  -- habamax or slate either looks good for me 
vim.cmd('filetype plugin on')
vim.opt.wildmenu = true

-- functional wrapper to map custom keybindings
function map(mode, lhs, rhs, opts)
    local options = { noremap = true }
    if opts then
        options = vim.tbl_extend("force", options, opts)
    end
    vim.api.nvim_set_keymap(mode, lhs, rhs, options)
end

-- reload config
map("n", "<leader>r", ":source ~/.config/nvim/init.lua<CR>")	-- reload neovim config

-- write and something
map("n", "<C-s>", ":w")                 -- auto insert write command then add more if needed, else press <ENTER>

-- Tab bindings 
map("n", "<leader>t", ":tabnew<CR>")			-- space+t creates new tab
map("n", "<leader>x", ":tabclose<CR>")			-- space+x closes current tab
map("n", "<leader>j", ":tabprevious<CR>")		-- space+j moves to previous tab
map("n", "<leader>k", ":tabnext<CR>")			-- space+k moves to next tab

-- easy split generation
map("n", "<leader>v", ":vsplit ")				-- space+v creates a veritcal split
map("n", "<leader>s", ":split  ")					-- space+s creates a horizontal split

-- Open netrw in 25% split in tree view
map("n", "<leader>e", ":25Lex<CR>")			-- space+e toggles netrw tree view 

-- Automatically close brackets, parethesis, and quotes
map("i", "'", "''<left>")
map("i", "\"", "\"\"<left>")
map("i", "(", "(  )<left><left>")
map("i", "[", "[]<left>")
map("i", "{<CR>", "{}<left><CR><up><right><CR>")
map("i", "{;", "{};<left><left>")
map("i", "/*", "/**/<left><left>")

